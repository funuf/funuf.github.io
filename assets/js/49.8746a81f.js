(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{436:function(t,s,e){"use strict";e.r(s);var a=e(23),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("bannerv",{attrs:{v:"/img/it/devops/kubernetes-cover.png"}}),t._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[t._v("Kubernetes是一个容器编排工具，提高应用的容器化部署及维护的效率。")]),t._v(" "),e("p",[t._v("Kubernetes一个核心的特点就是能够自主的管理容器，让其按照用户的期望状态运行着。")]),t._v(" "),e("p",[t._v("Kubernetes比docker-compose更加方便，docker-compose常用于单机环境下的容器编排，而Kubernetes适合在集群环境下进行容器编排。")]),t._v(" "),e("p",[t._v("Kubernetes的前身是Google的Brog系统，高效方便地管理着分布式系统的各种资源，如计算资源、存储资源、网络资源等。")]),t._v(" "),e("p",[t._v("其有如下特性：")]),t._v(" "),e("ul",[e("li",[t._v("持续开发、集成和部署")]),t._v(" "),e("li",[t._v("可自动扩展的基础架构")]),t._v(" "),e("li",[t._v("开发、测试、生产环境的一致性")]),t._v(" "),e("li",[t._v("更高的资源利用效率")])]),t._v(" "),e("h2",{attrs:{id:"架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),e("p",[t._v("Kubernetes遵循客户端-服务器架构（BS），master和node安装在不同的Linux机器上。")]),t._v(" "),e("imgv",{attrs:{v:"/img/it/devops/kubernetes_architecture1.jpg"}}),t._v(" "),e("imgv",{attrs:{v:"/img/it/devops/kubernetes_architecture2.jpg"}}),t._v(" "),e("imgv",{attrs:{v:"/img/it/devops/kubernetes_architecture3.png"}}),t._v(" "),e("h3",{attrs:{id:"master"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#master"}},[t._v("#")]),t._v(" Master")]),t._v(" "),e("ul",[e("li",[t._v("api server：对外暴露Kubernetes的API，接收客户端的请求（kubectl客户端、Web可视化客户端）")]),t._v(" "),e("li",[t._v("controller：该组件是一个守护进程，负责管理Cluster各种资源。\n"),e("ul",[e("li",[t._v("由多种controller组成，不同的controller管理不同的资源。如replication controller管理deployment，namespace controller管理Namespace资源。")]),t._v(" "),e("li",[t._v("负责维持副本的期望数目")])])]),t._v(" "),e("li",[t._v("scheduler：负责分配工作负载，基于用户的期望状态和集群的实时状态，选择合适的节点进行任务分配")]),t._v(" "),e("li",[t._v("etcd：是一个高可用的分布式键值存储数据库，负责存储k8s集群所有需要持久化的重要信息，协助分布式集群的正常运转。")])]),t._v(" "),e("h3",{attrs:{id:"node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" Node")]),t._v(" "),e("ul",[e("li",[t._v("kubelet：负责与master节点进行通信，上报当前节点的信息，接收master的指令，对pod、volumes、container（docker）进行管理。")]),t._v(" "),e("li",[t._v("kube proxy：提供网络方面的路由与转发，以实现服务的映射访问和负载均衡。")]),t._v(" "),e("li",[t._v("Container Runtime（Docker）：具体的容器引擎，提供在相对隔离但轻量级的环境中运行应用程序的能力。")])]),t._v(" "),e("h2",{attrs:{id:"核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),e("ul",[e("li",[t._v("Cluster：是计算、存储和网络资源的集合，Kubeneters利用这些资源运行各种基于容器的应用。")]),t._v(" "),e("li",[t._v("Master：是Cluster的大脑，它的主要职责是调度即决定将应用放在哪里运行。为了实现高可用，可以运行多个Master")]),t._v(" "),e("li",[t._v("Node：职责是运行容器应用。Node由Master管理，Node负责监控并汇报容器的状态，同时根据Master的要求管理容器的生命周期")]),t._v(" "),e("li",[t._v("Pod：是Kubernetes的最小工作单元。每个Pod包含一个或多个容器。Pod中的容器会作为一个整体被Master调度到一个Node上运行。Kubernetes引入Pod的目的如下：\n"),e("ul",[e("li",[t._v("可管理性：有些容器天生就是需要紧密联系，一起工作。因此Pod提供了比容器更高层次的抽象。以Pod为最小单位进行调度、扩展、共享资源、管理生命周期。")]),t._v(" "),e("li",[t._v("通信和资源共享：pod中的所有容器使用同一个namespace，即相同的IP地址和Port空间。")])])]),t._v(" "),e("li",[t._v("Controller：Kubernetes通常不会直接创建Pod，而是通过Controller来管理Pod。\n"),e("ul",[e("li",[t._v("Controller中定义了Pod的部署特性，比如有几个副本、在什么样的Node上运行等。")]),t._v(" "),e("li",[t._v("为了满足不同的业务场景，Kubernetes提供了多种Controller\n"),e("ul",[e("li",[t._v("Deployment：是最常用的Controller，可管理Pod的多个副本，且确保Pod按照期望的状态运行")]),t._v(" "),e("li",[t._v("ReplicaSet：实现了多副本的管理。通常不需要直接使用ReplicaSet")]),t._v(" "),e("li",[t._v("DaemonSet：用于每个Node最多只运行一个Pod副本的场景。Daemon通常用于运行daemon。")]),t._v(" "),e("li",[t._v("StatefuleSet：保证pod的每个副本在整个生命周期中名称是不变的，而其他Controller不提供这个功能。")]),t._v(" "),e("li",[t._v("Job：用于运行结束就删除的应用。其他的Controller中的Pod通常是长期持续运行。")])])])])]),t._v(" "),e("li",[t._v("Service：\n"),e("ul",[e("li",[t._v("每个Pod都有自己的ip，且pod很可能会被频繁地销毁和重启，ip会发生变化。")]),t._v(" "),e("li",[t._v("Kubernetes service定义了外界访问一组特定pod的方式。service有自己的ip和端口，Service为pod提供了负载均衡")])])]),t._v(" "),e("li",[e("strong",[t._v("Kubernetes运行容器（Pod）和访问容器（Pod）这两项任务分别由Controller和Service执行")]),t._v("。")]),t._v(" "),e("li",[t._v("Namespace：\n"),e("ul",[e("li",[t._v("多个用户或项目组使用同一个Kubernetes Cluster，用于将其创建的Controller和Pod等资源分开")]),t._v(" "),e("li",[t._v("不同Namespace里的资源是完全隔离的")]),t._v(" "),e("li",[t._v("Kubernetes默认创建了两个Namespace\n"),e("ul",[e("li",[t._v("default：创建资源如果不指定，将被放到该命名空间下")]),t._v(" "),e("li",[t._v("kube-system：Kubernetes自己创建的系统资源将放到这个Namespace中。")])])])])])]),t._v(" "),e("h2",{attrs:{id:"安装准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装准备"}},[t._v("#")]),t._v(" 安装准备")]),t._v(" "),e("h3",{attrs:{id:"网络配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络配置"}},[t._v("#")]),t._v(" 网络配置")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/it/devops/Linux-CentOS.html#网络配置"}},[t._v("传送门")])],1),t._v(" "),e("h3",{attrs:{id:"关闭防火墙"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关闭防火墙"}},[t._v("#")]),t._v(" 关闭防火墙")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/it/devops/Linux-CentOS.html#关闭防火墙"}},[t._v("传送门")])],1),t._v(" "),e("h3",{attrs:{id:"关闭交换空间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关闭交换空间"}},[t._v("#")]),t._v(" 关闭交换空间")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/it/devops/Linux-CentOS.html#关闭交换空间"}},[t._v("CentOS传送门")])],1),t._v(" "),e("h3",{attrs:{id:"校对时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#校对时间"}},[t._v("#")]),t._v(" 校对时间")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/it/devops/Linux-CentOS.html#校对时间"}},[t._v("CentOS传送门")])],1),t._v(" "),e("h3",{attrs:{id:"修改主机名称"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改主机名称"}},[t._v("#")]),t._v(" 修改主机名称")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/it/devops/Linux.html#修改主机名称"}},[t._v("传送门")])],1),t._v(" "),e("h3",{attrs:{id:"本地域名解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地域名解析"}},[t._v("#")]),t._v(" 本地域名解析")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim /etc/hosts 建议配置一下 host 这里写你的ip ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".3.110 kubernetes-master \n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".3.120 kubernetes-node1 \n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".3.121 kubernetes-node2\n")])])]),e("h3",{attrs:{id:"将桥接的ipv4流量传递到iptables的链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将桥接的ipv4流量传递到iptables的链"}},[t._v("#")]),t._v(" 将桥接的IPv4流量传递到iptables的链")]),t._v(" "),e("p",[t._v("有一些ipv4的流量不能走iptables链（linux内核的一个过滤器，每个流量都会经过他，然后再匹配是否可进入当前应用进程去处理），导致流量丢失。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置k8s.conf文件（#k8s.conf文件原来不存在，需要自己创建的）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者直接vi /etc/sysctl.d/k8s.conf   最后添加如下3行")]),t._v("\nnet.bridge.bridge-nf-call-ip6tables"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nnet.bridge.bridge-nf-call-iptables"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nvm.swappiness"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加完毕后执行 sysctl --system 生效")]),t._v("\n")])])]),e("h3",{attrs:{id:"安装docker-镜像加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-镜像加速"}},[t._v("#")]),t._v(" 安装Docker/镜像加速")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/it/devops/Docker.html#安装"}},[t._v("传送门")])],1),t._v(" "),e("h2",{attrs:{id:"kubernetes组网"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes组网"}},[t._v("#")]),t._v(" Kubernetes组网")]),t._v(" "),e("h3",{attrs:{id:"安装kubeadm-kubectl-kubelet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装kubeadm-kubectl-kubelet"}},[t._v("#")]),t._v(" 安装kubeadm/kubectl/kubelet")]),t._v(" "),e("p",[t._v("Master/Node节点都需要安装。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://developer.aliyun.com/mirror/kubernetes",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里云镜像--传送门"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"debian-ubuntu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#debian-ubuntu"}},[t._v("#")]),t._v(" Debian/Ubuntu")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y apt-transport-https\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" apt-key "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" - \n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/etc/apt/sources.list.d/kubernetes.list")]),t._v("\ndeb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\nEOF")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y kubelet kubeadm kubectl\n")])])]),e("h4",{attrs:{id:"centos-rhel-fedora"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centos-rhel-fedora"}},[t._v("#")]),t._v(" CentOS/RHEL/Fedora")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/yum.repos.d/kubernetes.repo")]),t._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF")]),t._v("\nsetenforce "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y kubelet kubeadm kubectl\nsystemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" kubelet "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" systemctl start kubelet\n")])])]),e("p",[t._v("ps: 由于官网未开放同步方式, 可能会有索引gpg检查失败的情况, 这时请用 "),e("code",[t._v("yum install -y --nogpgcheck kubelet kubeadm kubectl")]),t._v(" 安装")]),t._v(" "),e("h3",{attrs:{id:"初始化master"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化master"}},[t._v("#")]),t._v(" 初始化Master")]),t._v(" "),e("h4",{attrs:{id:"目录准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录准备"}},[t._v("#")]),t._v(" 目录准备")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p kubernetes/cluster\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /kubernetes/cluster\n")])])]),e("h4",{attrs:{id:"yml文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yml文件"}},[t._v("#")]),t._v(" yml文件")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 /usr/local/kubernetes/cluster 路径下执行")]),t._v("\nkubeadm config print init-defaults --kubeconfig ClusterConfiguration "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" kubeadm.yml\n")])])]),e("ul",[e("li",[t._v("修改主节点名称 localAPIEndpoint.advertiseAddress")]),t._v(" "),e("li",[t._v("修改仓库地址 imageRepository")]),t._v(" "),e("li",[t._v("修改版本号 kubernetesVersion")]),t._v(" "),e("li",[t._v('增加pod的网段 podSubnet: "10.244.0.0/16"')])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubeadm.k8s.io/v1beta2\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bootstrapTokens")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("groups")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" system"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("bootstrappers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("kubeadm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("default"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("token\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" abcdef.0123456789abcdef\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ttl")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 24h0m0s\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usages")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" signing\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" authentication\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" InitConfiguration\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("localAPIEndpoint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改为主节点 IP")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("advertiseAddress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.3.110\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bindPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6443")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeRegistration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("criSocket")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/run/dockershim.sock\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("master\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("taints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NoSchedule\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role.kubernetes.io/master\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiServer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutForControlPlane")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 4m0s\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubeadm.k8s.io/v1beta2\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("certificatesDir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /etc/kubernetes/pki\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controllerManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dns")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CoreDNS\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("etcd")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("local")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dataDir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/lib/etcd\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 国内不能访问 Google，修改为阿里云")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imageRepository")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" registry.aliyuncs.com/google_containers\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterConfiguration\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里要对应的安装的adm 版本号")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubernetesVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1.18.2\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networking")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dnsDomain")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster.local\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置 POD 所在网段为我们虚拟机不重叠的网段（这里用的是 Flannel 默认网段）")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSubnet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.244.0.0/16"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceSubnet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.96.0.0/12\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scheduler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"查看所需镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看所需镜像"}},[t._v("#")]),t._v(" 查看所需镜像")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubeadm config images list --config kubeadm.yml\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# registry.aliyuncs.com/google_containers/kube-apiserver:v1.18.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# registry.aliyuncs.com/google_containers/kube-controller-manager:v1.18.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# registry.aliyuncs.com/google_containers/kube-scheduler:v1.18.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# registry.aliyuncs.com/google_containers/kube-proxy:v1.18.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# registry.aliyuncs.com/google_containers/pause:3.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# registry.aliyuncs.com/google_containers/etcd:3.4.3-0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# registry.aliyuncs.com/google_containers/coredns:1.6.7")]),t._v("\n")])])]),e("h4",{attrs:{id:"拉取所需镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取所需镜像"}},[t._v("#")]),t._v(" 拉取所需镜像")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubeadm config images pull --config kubeadm.yml\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [config/images] Pulled registry.aliyuncs.com/google_containers/kube-apiserver:v1.18.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [config/images] Pulled registry.aliyuncs.com/google_containers/kube-controller-manager:v1.18.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [config/images] Pulled registry.aliyuncs.com/google_containers/kube-scheduler:v1.18.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [config/images] Pulled registry.aliyuncs.com/google_containers/kube-proxy:v1.18.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [config/images] Pulled registry.aliyuncs.com/google_containers/pause:3.2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [config/images] Pulled registry.aliyuncs.com/google_containers/etcd:3.4.3-0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [config/images] Pulled registry.aliyuncs.com/google_containers/coredns:1.6.7")]),t._v("\n")])])]),e("h4",{attrs:{id:"初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),e("p",[t._v("执行以下命令初始化主节点，该命令指定了初始化时需要使用的配置文件，\n其中添加 "),e("code",[t._v("--upload-certs")]),t._v(" 参数可以在后续执行加入节点时自动分发证书文件。追加的 "),e("code",[t._v("tee kubeadm-init.log")]),t._v(" 用以输出日志。")]),t._v(" "),e("p",[t._v("如果安装 kubernetes 版本和下载的镜像版本不统一则会出现 "),e("code",[t._v("timed out waiting for the condition")]),t._v(" 错误。\n中途失败或是想修改配置可以使用"),e("code",[t._v("kubeadm reset")]),t._v("命令进行重置，再做初始化操作即可。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubeadm init --config"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kubeadm.yml --upload-certs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" kubeadm-init.log\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("init"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using Kubernetes version: v1.18.2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Running pre-flight checks\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("WARNING IsDockerSystemdCheck"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": detected "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cgroupfs"')]),t._v(" as the Docker cgroup driver. The recommended driver is "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"systemd"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Please follow the guide at https://kubernetes.io/docs/setup/cri/\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Pulling images required "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" setting up a Kubernetes cluster\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" This might take a minute or two, depending on the speed of your internet connection\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" You can also perform this action "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" beforehand using "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kubeadm config images pull'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing kubelet environment "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" with flags to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/kubelet/kubeadm-flags.env"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing kubelet configuration to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/kubelet/config.yaml"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Starting the kubelet\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using certificateDir folder "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/pki"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ca"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apiserver"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" apiserver serving cert is signed "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" DNS names "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubernetes-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" and IPs "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.1 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".3.110"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apiserver-kubelet-client"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"front-proxy-ca"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"front-proxy-client"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"etcd/ca"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"etcd/server"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" etcd/server serving cert is signed "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" DNS names "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubernetes-master localhost"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" and IPs "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".3.110 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 ::1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"etcd/peer"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" etcd/peer serving cert is signed "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" DNS names "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubernetes-master localhost"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" and IPs "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".3.110 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 ::1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"etcd/healthcheck-client"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apiserver-etcd-client"')]),t._v(" certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sa"')]),t._v(" key and public key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using kubeconfig folder "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin.conf"')]),t._v(" kubeconfig "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubelet.conf"')]),t._v(" kubeconfig "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"controller-manager.conf"')]),t._v(" kubeconfig "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler.conf"')]),t._v(" kubeconfig "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("control-plane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using manifest folder "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/manifests"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("control-plane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating static Pod manifest "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-apiserver"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("control-plane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating static Pod manifest "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-controller-manager"')]),t._v("\nW0430 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":04:10.931026    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3627")]),t._v(" manifests.go:225"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" the default kube-apiserver authorization-mode is "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node,RBAC"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" using "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node,RBAC"')]),t._v("\nW0430 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":04:10.931702    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3627")]),t._v(" manifests.go:225"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" the default kube-apiserver authorization-mode is "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node,RBAC"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" using "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node,RBAC"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("control-plane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating static Pod manifest "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-scheduler"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("etcd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating static Pod manifest "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" etcd "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/manifests"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("wait-control-plane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Waiting "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the kubelet to boot up the control plane as static Pods from directory "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/manifests"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" This can take up to 4m0s\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("apiclient"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" All control plane components are healthy after "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.506907")]),t._v(" seconds\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("upload-config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Storing the configuration used "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ConfigMap "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubeadm-config"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-system"')]),t._v(" Namespace\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating a ConfigMap "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubelet-config-1.18"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" namespace kube-system with the configuration "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the kubelets "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the cluster\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("upload-certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Storing the certificates "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Secret "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubeadm-certs"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-system"')]),t._v(" Namespace\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("upload-certs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using certificate key:\nd9f7da0494b05cb09b3a27f15bebc389281ade22d90cd17ecdb38a7d3c6fb4be\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mark-control-plane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Marking the "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" kubernetes-master as control-plane by adding the label "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"node-role.kubernetes.io/master=''\"")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mark-control-plane"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Marking the "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" kubernetes-master as control-plane by adding the taints "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("node-role.kubernetes.io/master:NoSchedule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using token: abcdef.0123456789abcdef\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configured RBAC rules to allow Node Bootstrap tokens to get nodes\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configured RBAC rules to allow Node Bootstrap tokens to post CSRs "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" order "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" nodes to get long term certificate credentials\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configured RBAC rules to allow certificate rotation "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" client certificates "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the cluster\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cluster-info"')]),t._v(" ConfigMap "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-public"')]),t._v(" namespace\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-finalize"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Updating "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/kubelet.conf"')]),t._v(" to point to a rotatable kubelet client certificate and key\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addons"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Applied essential addon: CoreDNS\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addons"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -i /etc/kubernetes/admin.conf "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -u"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -g"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubectl apply -f [podnetwork].yaml"')]),t._v(" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" any number of worker nodes by running the following on each as root:\n\nkubeadm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".3.110:6443 --token abcdef.0123456789abcdef "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --discovery-token-ca-cert-hash sha256:0c96e0d5df660013c8ebd726c4f7ea022cf205616d4ff30062ed4c43cbd56b81\n")])])]),e("h4",{attrs:{id:"配置kubectl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置kubectl"}},[t._v("#")]),t._v(" 配置kubectl")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -i /etc/kubernetes/admin.conf "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 非 ROOT 用户执行")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -u"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -g"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n")])])]),e("h4",{attrs:{id:"验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl get "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出如下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@kubernetes-master cluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get node")]),t._v("\nNAME                STATUS     ROLES    AGE     VERSION\nkubernetes-master   NotReady   master   6m34s   v1.18.2\n")])])]),e("h3",{attrs:{id:"添加从节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加从节点"}},[t._v("#")]),t._v(" 添加从节点")]),t._v(" "),e("p",[t._v("将 Node 节点加入到集群中很简单，只需要在 Node 服务器上安装 kubeadm，kubectl，kubelet 三个工具，然后使用 "),e("code",[t._v("kubeadm join")]),t._v(" 命令加入即可。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubeadm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".3.110:6443 --token abcdef.0123456789abcdef "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --discovery-token-ca-cert-hash sha256:e4f3d4e6f0154005e6004866fbbf32b09e746cf1a66c9c97de81d1c252ac9b61 \n")])])]),e("p",[t._v("如果没有上述命令（token），可以通过下面的命令从主节点获取token")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubeadm token create --print-join-command\n")])])]),e("p",[t._v("执行完毕之后 到 master 节点 执行 "),e("code",[t._v("kubectl get node")]),t._v(" 验证是否加入成功。")]),t._v(" "),e("h3",{attrs:{id:"重置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重置"}},[t._v("#")]),t._v(" 重置")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置 'kubeadm init' 或 'kubeadm join' 对此主机所做的更改将被还原 ")]),t._v("\nkubeadm reset\n")])])]),e("h2",{attrs:{id:"网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),e("h3",{attrs:{id:"容器网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器网络"}},[t._v("#")]),t._v(" 容器网络")]),t._v(" "),e("p",[t._v("容器网络是容器选择连接到其他容器、主机和外部网络的机制。")]),t._v(" "),e("p",[t._v("容器的 runtime 提供了各种网络模式，每种模式都会产生不同的体验。例如，Docker 默认情况下可以为容器配置以下网络：")]),t._v(" "),e("ol",[e("li",[t._v("none： 将容器添加到一个容器专门的网络堆栈中，没有对外连接。")]),t._v(" "),e("li",[t._v("host： 将容器添加到主机的网络堆栈中，没有隔离。")]),t._v(" "),e("li",[t._v("default bridge： 默认网络模式。每个容器可以通过 IP 地址相互连接。")]),t._v(" "),e("li",[t._v("自定义网桥： 用户定义的网桥，具有更多的灵活性、隔离性和其他便利功能。")])]),t._v(" "),e("h3",{attrs:{id:"kubernetes网络模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes网络模型"}},[t._v("#")]),t._v(" Kubernetes网络模型")]),t._v(" "),e("p",[t._v("Kubernetes采用的是基于扁平地址空间的网络模型。")]),t._v(" "),e("p",[t._v("集群中的每隔Pod都有自己的IP地址：")]),t._v(" "),e("ol",[e("li",[t._v("【Pod内】同一个Pod中的容器共享Pod的IP，能够通过localhost通信。")]),t._v(" "),e("li",[t._v("【Pod间】Pod的IP是集群可见的，Pod之间不需要配置NAT就能直接通过IP进行通信。")]),t._v(" "),e("li",[t._v("【基于名称】Service提供了对Pod的抽象层，通过基于名称的访问，屏蔽了Pod由于创建/销毁导致的IP改变带来的问题。")]),t._v(" "),e("li",[t._v("【集群外】通过Service的NodePort进行端口映射，对外提供服务。")])]),t._v(" "),e("p",[t._v("Kubernetes的三层网络模型如下，其中Pod网络和Service都是虚拟网络。")]),t._v(" "),e("imgv",{attrs:{v:"/img/it/devops/kubernetes_network.png"}}),t._v(" "),e("p",[t._v("CNI(Container Networking Interface)是由CoreOS剔除的容器网络规范，为了保证网络方案的标准化、扩展性和灵活性，使用了插件（Plugin）模型创建容器的网络栈。")]),t._v(" "),e("p",[t._v("Kubernetes 中可选的 CNI 插件有Calico（支持Network Policy）、Canal（支持Network Policy）、Flannel（不支持Network Policy）等。")]),t._v(" "),e("p",[t._v("所谓Network Policy是基于Label选择Pod，为Pod定义Network Policy后，Pod之间基于特定策略进行隔离，只有Policy允许的流量才能访问Pod。")]),t._v(" "),e("h3",{attrs:{id:"安装calico"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装calico"}},[t._v("#")]),t._v(" 安装Calico")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在/usr/local/kubernetes/calico目录下")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载资源")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://docs.projectcalico.org/manifests/calico.yaml\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意观察：CALICO_IPV4POOL_CIDR  参数 如果 没有被注释 则需要修改成你分配个pod 的网段")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用到 kubenetes")]),t._v("\nkubectl apply -f calico.yaml\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有 pods 的状态  Ready 表示安装成功")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),t._v(" kubectl get pods --all-namespaces\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@kubernetes-master ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get node")]),t._v("\nNAME                STATUS   ROLES    AGE   VERSION\nkubernetes-master   Ready    master   25m   v1.18.2\nkubernetes-node1    Ready    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   20m   v1.18.2\nkubernetes-node2    Ready    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   19m   v1.18.2\n")])])]),e("h2",{attrs:{id:"nfs数据卷"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nfs数据卷"}},[t._v("#")]),t._v(" NFS数据卷")]),t._v(" "),e("p",[t._v("为了使 Pod 在任何节点上都能够使用同一份持久化存储数据，我们需要使用网络存储的解决方案为 Pod 提供 数据卷。常用的网络存储方案有：NFS/cephfs/glusterfs")]),t._v(" "),e("h3",{attrs:{id:"nfs服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nfs服务器"}},[t._v("#")]),t._v(" NFS服务器")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/it/devops/Linux-CentOS.html#NFS网络存储"}},[t._v("传送们")])],1),t._v(" "),e("h3",{attrs:{id:"问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 若出现 MountVolume.SetUp failed for volume "etcd-certs" : secret "etcd-certs" not found')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 则执行以下命令")]),t._v("\nkubectl -n kube-system create secret generic etcd-certs --from-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/etcd/server.crt --from-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/kubernetes/pki/etcd/server.key\n")])])]),e("h2",{attrs:{id:"数据卷-定义-声明-使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据卷-定义-声明-使用"}},[t._v("#")]),t._v(" 数据卷（定义/声明/使用）")]),t._v(" "),e("p",[t._v("存储管理与计算管理是两个不同的问题。Persistent Volume 子系统，对存储的供应和使用做了抽象，以 API 形式提供给管理员和用户使用。")]),t._v(" "),e("p",[t._v("要完成这一任务，我们引入了两个新的 API 资源：Persistent Volume（持久卷） 和 Persistent Volume Claim（持久卷消费者）。")]),t._v(" "),e("p",[t._v("Persistent Volume（PV）是集群之中的一块网络存储。PV 跟 Volume (卷) 类似，不过会有独立于 Pod 的生命周期。")]),t._v(" "),e("p",[t._v("Persistent Volume Claim (PVC) 是用户的一个请求。跟 Pod 类似，Pod 消费 Node 的资源，PVC 消费 PV 的资源。")]),t._v(" "),e("p",[t._v("Claim 能够请求特定的尺寸和访问模式（例如可以加载一个读写，以及多个只读实例）")]),t._v(" "),e("h3",{attrs:{id:"交互流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#交互流程"}},[t._v("#")]),t._v(" 交互流程")]),t._v(" "),e("p",[t._v("PV 是集群的资源。PVC 是对这一资源的请求，也是对资源的所有权的检验。PV 和 PVC 之间的互动遵循如下的生命周期。")]),t._v(" "),e("p",[t._v("供应： 集群管理员会创建一系列的 PV。这些 PV 包含了为集群用户提供的真实存储资源，它们可利用 Kubernetes API 来消费。")]),t._v(" "),e("p",[t._v("绑定： 用户创建一个包含了容量和访问模式的持久卷申请。Master 会监听 PVC 的产生，并尝试根据请求内容查找匹配的 PV，并把 PV 和 PVC 进行绑定。用户能够获取满足需要的资源，并且在使用过程中可能超出请求数量。如果找不到合适的卷，这一申请就会持续处于非绑定状态，一直到出现合适的 PV。例如一个集群准备了很多的 50G 大小的持久卷，（虽然总量足够）也是无法响应 100G 的申请的，除非把 100G 的 PV 加入集群。")]),t._v(" "),e("p",[t._v("使用： Pod 把申请作为卷来使用。集群会通过 PVC 查找绑定的 PV，并 Mount 给 Pod。对于支持多种访问方式的卷，用户在使用 PVC 作为卷的时候，可以指定需要的访问方式。一旦用户拥有了一个已经绑定的 PVC，被绑定的 PV 就归该用户所有了。用户的 Pods 能够通过在 Pod 的卷中包含的 PVC 来访问他们占有的 PV。")]),t._v(" "),e("p",[t._v("释放： 当用户完成对卷的使用时，就可以利用 API 删除 PVC 对象了，而且他还可以重新申请。删除 PVC 后，对应的卷被视为 “被释放”，但是这时还不能给其他的 PVC 使用。之前的 PVC 数据还保存在卷中，要根据策略来进行后续处理。")]),t._v(" "),e("p",[t._v("回收： PV 的回收策略向集群阐述了在 PVC 释放卷的时候，应如何进行后续工作。目前可以采用三种策略：保留，回收或者删除。保留策略允许重新申请这一资源。在持久卷能够支持的情况下，删除策略会同时删除持久卷以及 AWS EBS/GCE PD 或者 Cinder 卷中的存储内容。如果插件能够支持，回收策略会执行基础的擦除操作（rm -rf /thevolume/*），这一卷就能被重新申请了。")]),t._v(" "),e("h3",{attrs:{id:"pv示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pv示例"}},[t._v("#")]),t._v(" PV示例")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置容量 一般来说，PV 会指定存储容量。这里需要使用 PV 的 capcity 属性。")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目前存储大小是唯一一个能够被申请的指标，今后会加入更多属性，例如 IOPS，吞吐能力等。")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问模式 只要资源提供者支持，持久卷能够被用任何方式加载到主机上。每种存储都会有不同的能力，每个 PV 的访问模式也会被设置成为该卷所支持的特定模式。")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 例如 NFS 能够支持多个读写客户端，但是某个 NFS PV 可能会在服务器上以只读方式使用。")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个 PV 都有自己的一系列的访问模式，这些访问模式取决于 PV 的能力。访问模式的可选范围如下：")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ReadWriteOnce： 该卷能够以读写模式被加载到一个节点上 ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ReadOnlyMany： 该卷能够以只读模式加载到多个节点上 ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ReadWriteMany： 该卷能够以读写模式被多个节点同时加载 在 CLI 下，")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问模式缩写为：")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RWO： ReadWriteOnce ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ROX： ReadOnlyMany ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RWX： ReadWriteMany ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 另外，一个卷不论支持多少种访问模式，同时只能以一种访问模式加载。例如一个 GCE Persistent Disk 既能支持 ReadWriteOnce，也能支持 ReadOnlyMany。")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 该卷能够以读写模式被多个节点同时加载")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RecyclingPolicy（回收策略） 当前的回收策略可选值包括：")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Retain： 人工重新申请 ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Recycle： 基础擦除（rm-rf/thevolume/*） ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Delete： 相关的存储资产例如 AWS EBS，GCE PD 或者 OpenStack Cinder 卷一并删除 ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目前，只有 NFS 和 HostPath 支持 Recycle 策略，AWS EBS、GCE PD 以及 Cinder 卷支持 Delete 策略。")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Recycle\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("storageclass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("provisioner\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Filesystem\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NFS 服务端配置的路径")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/local/kubernetes/volumes/nginx"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NFS 服务端地址")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.3.130\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" 一个卷会处于如下阶段（Phase）之一：\nAvailable： 可用资源，尚未被绑定到 PVC 上 \nBound： 该卷已经被绑定 \nReleased： PVC 已经被删除，但该资源尚未被集群回收 \nFailed： 该卷的自动回收过程失败\n")])])]),e("h3",{attrs:{id:"pvc示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pvc示例"}},[t._v("#")]),t._v(" PVC示例")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pvc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteMany\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#storageClassName: nfs-storageclass-provisioner")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Filesystem\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n")])])]),e("h2",{attrs:{id:"常用服务列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用服务列表"}},[t._v("#")]),t._v(" 常用服务列表")]),t._v(" "),e("p",[t._v("使用k8s 装配服务，关键在于对 k8s 对象的了解和熟练的使用。")]),t._v(" "),e("p",[t._v("只需要一个 资源配置文件即可搞定，除此之外根本没有什么好讲的。")]),t._v(" "),e("h3",{attrs:{id:"yaml文件的自动生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml文件的自动生成"}},[t._v("#")]),t._v(" yaml文件的自动生成")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://k8syaml.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"kuboard"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kuboard"}},[t._v("#")]),t._v(" Kuboard")]),t._v(" "),e("p",[e("a",{attrs:{href:"/it/devops/k8s/Kuboard"}},[t._v("Kuboard--传送门")])]),t._v(" "),e("h3",{attrs:{id:"nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),e("p",[e("a",{attrs:{href:"/it/devops/k8s/Nginx"}},[t._v("Ngnix--传送门")])]),t._v(" "),e("h3",{attrs:{id:"rabbitmq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq"}},[t._v("#")]),t._v(" RabbitMQ")]),t._v(" "),e("p",[e("a",{attrs:{href:"/it/devops/k8s/RabbitMQ"}},[t._v("RabbitMQ--传送门")])]),t._v(" "),e("h3",{attrs:{id:"nacos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nacos"}},[t._v("#")]),t._v(" Nacos")]),t._v(" "),e("p",[e("a",{attrs:{href:"/it/devops/k8s/Nacos"}},[t._v("Nacos--传送门")])]),t._v(" "),e("h2",{attrs:{id:"常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),e("h3",{attrs:{id:"修改默认端口范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改默认端口范围"}},[t._v("#")]),t._v(" 修改默认端口范围")]),t._v(" "),e("p",[t._v("Kubernetes服务的NodePort的默认端口范围是30000-32767，某些场合下该限制不太使用，可以按如下步骤自定义端口范围。")]),t._v(" "),e("ol",[e("li",[t._v("编辑"),e("code",[t._v("vim /etc/kubernetes/manifests/kube-apiserver.yaml")]),t._v("文件，增加配置"),e("code",[t._v("--service-node-port-range=2-65535")])]),t._v(" "),e("li",[t._v("使用"),e("code",[t._v("docker ps")]),t._v(" 命令找到"),e("code",[t._v("kube-apiserver")]),t._v("容器，再使用"),e("code",[t._v("docker restart <ApiServer 容器 ID>")]),t._v("即可生效")])]),t._v(" "),e("imgv",{attrs:{v:"/img/it/devops/kubernetes-port-range-update.png"}}),t._v(" "),e("h2",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),e("h3",{attrs:{id:"帮助命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#帮助命令"}},[t._v("#")]),t._v(" 帮助命令")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubeadm --help\nkubectl --help\n")])])]),e("h3",{attrs:{id:"查看版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看版本"}},[t._v("#")]),t._v(" 查看版本")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubeadm version\nkubectl version\n")])])]),e("h3",{attrs:{id:"打印join-token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打印join-token"}},[t._v("#")]),t._v(" 打印join token")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成token，供slave节点加入")]),t._v("\nkubeadm token create --print-join-command\n")])])]),e("h3",{attrs:{id:"所有命名空间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#所有命名空间"}},[t._v("#")]),t._v(" 所有命名空间")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增加 --all-namespace")]),t._v("\nkubectl get pod --all-namespace\n")])])]),e("h3",{attrs:{id:"配置imagepullsecret"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置imagepullsecret"}},[t._v("#")]),t._v(" 配置imagePullSecret")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/ding2016/p/13384799.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubernetes配置imagePullSecrets秘钥来拉取镜像"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl create secret docker-registry qcsd   --docker-server"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://registry.cn-qingdao.aliyuncs.com/qcsd   --docker-username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xxxxxx  --docker-password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yyyyyy\n")])])]),e("h3",{attrs:{id:"指定版本的kubelet-kubeadm-kubectl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定版本的kubelet-kubeadm-kubectl"}},[t._v("#")]),t._v(" 指定版本的kubelet/kubeadm/kubectl")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已安装")]),t._v("\nyum list installed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" kube\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载")]),t._v("\nyum remove kubelet kubeadm kubectl\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" kubelet-1.18.2 kubeadm-1.18.2 kubectl -1.18.2\n")])])]),e("h3",{attrs:{id:"查看集群信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看集群信息"}},[t._v("#")]),t._v(" 查看集群信息")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl cluster-info\n")])])]),e("h3",{attrs:{id:"查看资源实体"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看资源实体"}},[t._v("#")]),t._v(" 查看资源实体")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl 没有 list命令")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 简单查看")]),t._v("\nkubectl get xxx\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看详情")]),t._v("\nkubectl describe xxx\n")])])]),e("h3",{attrs:{id:"显示更多信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显示更多信息"}},[t._v("#")]),t._v(" 显示更多信息")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示pod的更多信息，比如ip地址")]),t._v("\nkubectl get pod -o wide \n")])])]),e("h3",{attrs:{id:"确定-apiversion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#确定-apiversion"}},[t._v("#")]),t._v(" 确定 apiVersion")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://trstringer.com/kubernetes-apiversion/",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看k8s已经定义的实体，极其所在的分组")]),t._v("\nkubectl api-resources\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看api所在分组的版本")]),t._v("\nkubectl api-versions "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" apps \n")])])]),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://kubernetes.io/docs/home/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.tutorialspoint.com/kubernetes/index.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tutorials"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://kuboard.cn/learning/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kuboard"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/ispeasant/article/details/108405488",target:"_blank",rel:"noopener noreferrer"}},[t._v("卸载docker"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/384061373",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装k8s"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/75091ad364c1",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装指定版本的kubeadm"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/xinfuxuan4/article/details/101097358",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用journalctl 查看kubelet的日志"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:""}},[t._v("k8s  master 上 报错The connection to the server 192.168.X.X:6443 was refused -did you specify…?")])]),t._v(" "),e("p",[t._v("直接重装集群："),e("code",[t._v("kubeadm reset")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@node01 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods")]),t._v("\nThe connection to the server "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.215:6443 was refused - did you specify the right "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" or port?\n")])])]),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/fei79534672/article/details/78710858",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kuboard部署好，无法通过master的ip:port进行访问，因为calico网络的问题"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/qq_43659763/article/details/108471497",target:"_blank",rel:"noopener noreferrer"}},[t._v("k8s集群使用calico遇到的问题，报错内容如：“Readiness probe failed: caliconode is not ready: BIRD is not ready:"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/ll837448792/article/details/96622375",target:"_blank",rel:"noopener noreferrer"}},[t._v("busybox 1.28.3 无法解析域名"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1689059",target:"_blank",rel:"noopener noreferrer"}},[t._v("更新一个10年有效期的 Kubernetes 证书"),e("OutboundLink")],1),e("script",[t._v("\nimport Imgv from &quot;../../.vuepress/components/imgv&quot;; export default { components: { Imgv } }\n")]),e("script",[t._v("\nimport Bannerv from &quot;../../.vuepress/components/bannerv&quot;; export default { components: { Bannerv } }\n")])])],1)}),[],!1,null,null,null);s.default=n.exports}}]);