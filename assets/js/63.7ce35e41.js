(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{478:function(t,a,r){"use strict";r.r(a);var s=r(23),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"内网穿透"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内网穿透"}},[t._v("#")]),t._v(" 内网穿透")]),t._v(" "),r("p",[t._v("所谓内网穿透，就是指在公网（外网）上访问不具有公网IP的计算机中的服务的技术。")]),t._v(" "),r("h2",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),r("h3",{attrs:{id:"内网与外网"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内网与外网"}},[t._v("#")]),t._v(" 内网与外网")]),t._v(" "),r("p",[t._v("内网：即所说的局域网，比如学校的局域网，局域网内每台计算机的IP地址在本局域网内具有互异性，是不可重复的。但两个局域网内的内网IP可以有相同的。")]),t._v(" "),r("p",[t._v("外网：即互联网，局域网通过一台服务器或是一个路由器对外连接的网络，这个IP地址是唯一的。也就是说内网里所有的计算机都是连接到这一个外网IP上，通过这一个外网IP对外进行交换数据的。也就是说，一个局域网里所有电脑的内网IP是互不相同的,但共用一个外网IP。（用ipconfig/all查到的IP是你本机的内网IP；在http://www.ip138.com上看到的是你连接互联网所使用的IP，即外网）。")]),t._v(" "),r("h3",{attrs:{id:"公有ip和私有ip"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#公有ip和私有ip"}},[t._v("#")]),t._v(" 公有IP和私有IP")]),t._v(" "),r("p",[t._v("公有地址(Public address)：由 Inter NIC(Internet Network Information Center 因特网信息中心)负责。这些 IP 地址分配给注册并向Inter NIC提出申请的组织机构，公有 IP 全球唯一，通过它直接访问因特网(直接能上网)。")]),t._v(" "),r("p",[t._v("私有地址(Private address)：属于非注册地址，专门为组织机构内部使用，说白了，私有 IP 不能直接上网。")]),t._v(" "),r("h3",{attrs:{id:"网络地址转换-端口映射"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络地址转换-端口映射"}},[t._v("#")]),t._v(" 网络地址转换/端口映射")]),t._v(" "),r("p",[t._v("端口映射是 NAT 的一种，它将外网主机的 IP 地址的一个端口映射到内网中一台机器，提供相应的服务。当用户访问该 IP 的这个端口时，服务器自动将请求映射到对应局域网内部的机器上。")]),t._v(" "),r("p",[t._v("之前提到的内网，是不能被外网直接的访问的，只能通过一些中转技术，让内网“假装”成外网。")]),t._v(" "),r("p",[t._v("这就平常所说的内网穿透。")]),t._v(" "),r("h2",{attrs:{id:"原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),r("p",[t._v("对于内网来说，其不是不能主动访问公网端口，而是不能反过来有效的被公网访问。")]),t._v(" "),r("p",[t._v("内网穿透的主要思路就是利用这一点，让在内网的节点主动访问一个拥有公网IP地址的服务器，并由中间服务器搭桥，实现公网对内网的访问。")]),t._v(" "),r("imgv",{attrs:{v:"/img/it/devops/内网穿透原理.png"}}),t._v(" "),r("h2",{attrs:{id:"若干解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#若干解决方案"}},[t._v("#")]),t._v(" 若干解决方案")]),t._v(" "),r("h3",{attrs:{id:"ngrok"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ngrok"}},[t._v("#")]),t._v(" Ngrok")]),t._v(" "),r("p",[t._v("项目主页：https://ngrok.com/")]),t._v(" "),r("p",[t._v("项目介绍： 一个通过任何NAT或防火墙为您的本地主机服务器提供即时访问、安全的URL的命令。类似花生壳，分为服务端和客户端，也可以自己搭建服务端。")]),t._v(" "),r("h3",{attrs:{id:"花生壳"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#花生壳"}},[t._v("#")]),t._v(" 花生壳")]),t._v(" "),r("p",[t._v("项目主页：https://hsk.oray.com/")]),t._v(" "),r("p",[t._v("项目介绍：商业化比较成功的内网穿透。个人开发很不推荐，收费贵，企业可以考虑使用。")]),t._v(" "),r("h3",{attrs:{id:"natapp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#natapp"}},[t._v("#")]),t._v(" Natapp")]),t._v(" "),r("p",[t._v("项目主页：https://natapp.cn/")]),t._v(" "),r("p",[t._v("项目介绍：基于ngrok的国内收费内网穿透工具，类似花生壳，有免费版本，比花生壳好。免费版本：提供http,https,tcp全隧道穿透，随机域名/TCP端口，不定时强制更换域名/端口，自定义本地端口")]),t._v(" "),r("h3",{attrs:{id:"frp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#frp"}},[t._v("#")]),t._v(" Frp")]),t._v(" "),r("p",[t._v("项目主页：https://github.com/fatedier/frp")]),t._v(" "),r("p",[t._v("项目介绍：frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。")]),t._v(" "),r("h3",{attrs:{id:"lanproxy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lanproxy"}},[t._v("#")]),t._v(" Lanproxy")]),t._v(" "),r("p",[t._v("项目主页：https://github.com/ffay/lanproxy")]),t._v(" "),r("p",[t._v("项目介绍：lanproxy是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，目前仅支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面...）。目前市面上提供类似服务的有花生壳、TeamView、GoToMyCloud等等，但要使用第三方的公网服务器就必须为第三方付费，并且这些服务都有各种各样的限制，此外，由于数据包会流经第三方，因此对数据安全也是一大隐患。")]),t._v(" "),r("h3",{attrs:{id:"ssh"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ssh"}},[t._v("#")]),t._v(" SSH")]),t._v(" "),r("p",[t._v("配合autossh工具使用，因为autossh会容错")]),t._v(" "),r("p",[t._v("项目主页：http://www.harding.motd.ca/autossh/")]),t._v(" "),r("p",[t._v("项目介绍：自动重新启动SSH会话和隧道。autossh是一个程序，用于启动ssh的副本并进行监控，在死亡或停止传输流量时根据需要重新启动它。 这个想法来自rstunnel（Reliable SSH Tunnel），但是在C中实现。作者的观点是，它不像匆匆忙忙的工作那么容易。使用端口转发环路或远程回显服务进行连接监视。在遇到连接拒绝等快速故障时，关闭连接尝试的速度。在OpenBSD，Linux，Solaris，Mac OS X，Cygwin和AIX上编译和测试; 应该在其他BSD上工作。免费软件。")]),t._v(" "),r("h3",{attrs:{id:"spike"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spike"}},[t._v("#")]),t._v(" Spike")]),t._v(" "),r("p",[t._v("项目主页：https://github.com/slince/spike")]),t._v(" "),r("p",[t._v("项目介绍：Spike是一个可以用来将你的内网服务暴露在公网的快速的反向代理，基于ReactPHP，采用IO多路复用模型。采用Php实现。")]),t._v(" "),r("h2",{attrs:{id:"ngrok实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ngrok实现"}},[t._v("#")]),t._v(" Ngrok实现")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.ngrok.cc/_book/start/ngrok_linux.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ngrok网址"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("注册账号")]),t._v(" "),r("li",[t._v("开通隧道\n"),r("imgv",{attrs:{v:"/img/it/devops/ngrok1.png"}})],1),t._v(" "),r("li",[t._v("下载并解压Ngrok客户端")]),t._v(" "),r("li",[t._v("启动客户端 "),r("code",[t._v("./sunny clientid 你的隧道id")])]),t._v(" "),r("li",[t._v("配置wordpress的地址\n"),r("imgv",{attrs:{v:"/img/it/devops/ngrok2.png"}})],1)]),t._v(" "),r("h2",{attrs:{id:"花生壳实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#花生壳实现"}},[t._v("#")]),t._v(" 花生壳实现")]),t._v(" "),r("imgv",{attrs:{v:"/img/it/devops/花生壳.png"}}),t._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/303175108",target:"_blank",rel:"noopener noreferrer"}},[t._v("内网穿透--传送门"),r("OutboundLink")],1)])],1)}),[],!1,null,null,null);a.default=v.exports}}]);